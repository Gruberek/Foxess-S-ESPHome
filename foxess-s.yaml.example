esphome:
  name: foxess-s

esp8266:
  board: d1_mini

external_components:
  - source:
      type: git
      url: https://github.com/assembly12/Foxess-T-series-ESPHome-Home-Assistant
#  - source:
#      type: local
#      path: "esphome/components"

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  platform: esphome
  password: !secret ota_pass

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

#  manual_ip:
#    static_ip: xxx.xxx.xxx.xx
#    gateway: xxx.xxx.xxx.x
#    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
 ap:
  ssid: !secret wifi_fallback_ssid
  password: !secret wifi_fallback_pass

captive_portal:

uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 9600

button:
  - platform: restart
    name: "FoxESS Inverter Restart"

text_sensor:
  - platform: template
    name: "FoxESS Inverter Status"
    id: "inverter_mode_text_sensor"
    icon: mdi:solar-power-variant

sensor:
  - platform: foxess_s
    grid:
      voltage:
        name: "FoxESS Grid Voltage"
      current:
        name: "FoxESS Grid Current"
      active_power:
        name: "FoxESS Grid Active Power"
      frequency:
        name: "FoxESS Grid Frequency"

    pv:
      voltage:
        name: "FoxESS PV Voltage"
      current:
        name: "FoxESS PV Current"
      active_power:
        name: "FoxESS PV Power"

    total_energy_production:
      name: "Total Energy Production"
    energy_production_day:
      name: "Today Energy Production"

    generation_power:
      name: "FoxESS Generation Power"
    grid_power:
      name: "FoxESS Grid Power"
    loads_power:
      name: "FoxESS Loads Power"

    inverter_temp:
      name: "FoxESS Inverter Temp"
    ambient_temp:
      name: "FoxESS Ambient Temp"
    boost_temp:
      name: "FoxESS Boost Temp"

    inverter_status:
      name: "FoxESS Status Code"
      internal: true
      on_value:
        then:
          - lambda: |-
              if (x==0) {
                id(inverter_mode_text_sensor).publish_state("Offline");
              } else if (x==1) {
                id(inverter_mode_text_sensor).publish_state("Online");
              } else if (x==2) {
                id(inverter_mode_text_sensor).publish_state("Error");
              } else {
                id(inverter_mode_text_sensor).publish_state("Waiting for response...");
              }

# Uncomment this sensor and the i2c section to use the AHT10 (remove ambient_temp above)
#  - platform: aht10
#    temperature:
#      name: "FoxESS ambient Temperature"
#    humidity:
#      name: "FoxESS ambient Humidity"

#i2c:
